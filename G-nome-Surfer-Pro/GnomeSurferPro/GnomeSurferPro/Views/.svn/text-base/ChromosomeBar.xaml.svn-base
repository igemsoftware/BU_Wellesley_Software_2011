<s:SurfaceUserControl x:Class="GnomeSurferPro.Views.ChromosomeBar"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:s="http://schemas.microsoft.com/surface/2008"
    xmlns:l="clr-namespace:GnomeSurferPro"
    xmlns:selectors="clr-namespace:GnomeSurferPro.Selectors"
    xmlns:views="clr-namespace:GnomeSurferPro.Views"
    xmlns:util="clr-namespace:GnomeSurferPro.Util">
    
    <s:SurfaceUserControl.Resources>
        <!-- Style for main grid -->
        <Style TargetType="{x:Type Grid}"  x:Key="GridStyle">
            <Setter Property="Height" Value="200" />
        </Style>
        
        <!-- Datatemplate for tick marks -->
        <DataTemplate x:Key="TickMarkDataTemplate">
            <StackPanel Orientation="Vertical">
                <Line X1="0" Y1="0" X2="0" Y2="15" Stroke="White" StrokeThickness="1" HorizontalAlignment="Center"/> 
                <Label Content="{Binding Path=DisplayedValue}" Foreground="White"/>
            </StackPanel>
        </DataTemplate>
        
        <!-- Datatemplate for gene pentagons -->
        <DataTemplate x:Key="GenePartDataTemplate" >
            <Grid>
                <!-- Using a librarybaritem b/c it's a convenient way to get
                     a content control with touch events -->
                <s:LibraryBarItem Width="{Binding Path=Length}" 
                              Height="{Binding Path=Height}" 
                              PreviewContactDown="GenePentagon_PreviewContactDown">
                    <s:LibraryBarItem.Style>
                        <Style TargetType="{x:Type s:LibraryBarItem}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=Direction}" Value="Forward">
                                    <Setter Property="Background" Value="DodgerBlue" />
                                    <Setter Property="Opacity" Value="0.75"/> 
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=Direction}" Value="Reverse">
                                    <Setter Property="Background" Value="GreenYellow" />
                                    <Setter Property="Opacity" Value="0.75"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </s:LibraryBarItem.Style>
                    <s:LibraryBarItem.Clip>
                        <PathGeometry>
                            <PathGeometry.Figures>
                                <PathFigure StartPoint="{Binding Path=ZerothPentagonPoint}" IsClosed="True">
                                    <PathFigure.Segments>
                                        <LineSegment Point="{Binding Path=OnethPentagonPoint}" />
                                        <LineSegment Point="{Binding Path=TwothPentagonPoint}" />
                                        <LineSegment Point="{Binding Path=ThreethPentagonPoint}" />
                                        <LineSegment Point="{Binding Path=FourthPentagonPoint}" />
                                    </PathFigure.Segments>
                                </PathFigure>
                            </PathGeometry.Figures>
                        </PathGeometry>
                    </s:LibraryBarItem.Clip>
                    <StackPanel Orientation="Horizontal" Margin="15 0 0 0">
                        <StackPanel.Resources>
                            <Style TargetType="{x:Type Label}" >
                                <Setter Property="FontSize" Value="12"/>
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </StackPanel.Resources>
                        <Label FontWeight="Bold" Content="{Binding Path=Name}" />
                        <Label Content="{Binding Path=LocusTag}"/>
                    </StackPanel>
                </s:LibraryBarItem>
                <!--s:ElementMenu 
                    ActivationMode="HostInteraction" 
                    ActivationHost="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}}">
                    <s:ElementMenu.Style>
                        <Style TargetType="s:ElementMenu">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Direction}" Value="Forward">
                                    <Setter Property="Orientation" Value="-135" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Direction}" Value="Reverse">
                                    <Setter Property="Orientation" Value="0" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </s:ElementMenu.Style-->
                    
                    <!-- Bind each elementmenuitem to commands on the parent surfacelistbox's viewmodel -->
                    <!--s:ElementMenuItem Header="Translation" Command="{Binding DataContext.ShowTranslationCommand, RelativeSource=
                        {RelativeSource FindAncestor, AncestorType={x:Type s:SurfaceListBox}}}"
                        CommandParameter="{Binding}"/>
                    <s:ElementMenuItem Header="Sequence" Command="{Binding DataContext.ShowSequenceCommand, RelativeSource=
                        {RelativeSource FindAncestor, AncestorType={x:Type s:SurfaceListBox}}}"
                        CommandParameter="{Binding}"/>
                    <s:ElementMenuItem Header="Publications" Command="{Binding DataContext.ShowPublicationsCommand, RelativeSource=
                        {RelativeSource FindAncestor, AncestorType={x:Type s:SurfaceListBox}}}"
                        CommandParameter="{Binding}"/>
                    <s:ElementMenuItem Header="Primer" />
                </s:ElementMenu--> 
            </Grid>
            
        </DataTemplate>
        
        <!-- Styles for all gene pentagon itemcontainers.
        Don't use this style. Use ForwardGenePentagonItemcontainer or ReverseGenePentagonItemcontainer 
        which inherit from this style -->
        <Style x:Key="GenePentagonItemcontainer">
            <Setter Property="Control.Padding" Value="0"/>
            <Setter Property="Control.MinWidth" Value="0" />
            <Setter Property="Control.MinHeight" Value="0" />
            <Setter Property="Canvas.Left" Value="{Binding LeftPosition}" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type s:SurfaceListBoxItem}">
                        <WrapPanel Margin="0" Background="Transparent">
                            <ContentPresenter x:Name="ContentHost" />
                        </WrapPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--Style for forward gene pentagon itemcontainers -->
        <Style x:Key="ForwardGeneItemContainerStyle" BasedOn="{StaticResource GenePentagonItemcontainer}">
            <Setter Property="Canvas.Top" Value="20"/>
          
        </Style>

        <!--Style for reverse gene pentagon itemcontainers -->
        <Style x:Key="ReverseGeneItemContainerStyle" BasedOn="{StaticResource GenePentagonItemcontainer}">
            <Setter Property="Canvas.Top" Value="130"/>
        </Style>

        <!-- Style for tick mark itemcontainers -->
        <Style x:Key="TickMarkItemContainerStyle">
            <Setter Property="Canvas.Left" Value="{Binding Position}" />
            <Setter Property="Canvas.Top" Value="90" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type s:SurfaceListBoxItem}">
                        <WrapPanel Margin="0" Background="Transparent">
                            <ContentPresenter x:Name="ContentHost"/>
                        </WrapPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Wheel's Clipping Ellipse-->
        <EllipseGeometry x:Key="myEllipse" RadiusX="150" RadiusY="150" Center="150,150"/>
        
        <selectors:VisualPartSelector x:Key="myVisualPartSelector" />
        <selectors:GenePentagonStyleSelector x:Key="myGenePentagonStyleSelector" />
    </s:SurfaceUserControl.Resources>
    

    <Grid> <!--Added another grid so bar and wheel can have different styles-->
        <Grid.RowDefinitions>
            <RowDefinition Height="3*" />
            <RowDefinition Height="2*" />
            <RowDefinition Height="3*" />
        </Grid.RowDefinitions>
        <Grid Style="{StaticResource GridStyle}" Grid.Row="0" Margin="0,200,0,0">
            <s:SurfaceListBox Name="GeneListBox" 
                              ItemsSource="{Binding Parts}"
                              ItemTemplateSelector="{StaticResource myVisualPartSelector}"
                              ItemContainerStyleSelector="{StaticResource myGenePentagonStyleSelector}">
                <s:SurfaceListBox.Template>
                    <ControlTemplate>
                        <s:SurfaceScrollViewer
                            VerticalScrollBarVisibility="Disabled"
                            HorizontalScrollBarVisibility="Hidden"
                            CanContentScroll="True"
                            Background="Gray"
                            util:ScrollViewerBinding.HorizontalOffset="{Binding LeftmostVisiblePixel, Mode=TwoWay}"
                            ScrollChanged="SurfaceScrollViewer_ScrollChanged">
                            <views:LoopCanvasHorizontal 
                                IsItemsHost="True" 
                                ContentWidth="{Binding ContentWidth}"
                                Viewport="{Binding ViewportSize, Mode=OneWayToSource}"
                                ContentOffset="{Binding ContentOffset, Mode=OneWayToSource}"
                                ContentOriginOffset="{Binding ContentOriginPosition, Mode=OneWayToSource}"/>
                        </s:SurfaceScrollViewer>
                    </ControlTemplate>
                </s:SurfaceListBox.Template>
            </s:SurfaceListBox>
        </Grid>

        <Grid Grid.Row="1">
            <!--Hard coded "hands"-->
            <Line X1="512" Y1="175" X2="512" Y2="215" StrokeThickness="4" Stroke="Gray"/>
            <Line X1="512" Y1="175" X2="0" Y2="0" StrokeThickness="2" Stroke="Gray"/>
            <Line X1="512" Y1="175" X2="1024" Y2="0" StrokeThickness="2" Stroke="Gray"/>
        </Grid>
            
       <s:ScatterView Width="300" Height="300" Grid.Row="2">
            <s:ScatterViewItem CanMove="False" CanScale="False" CanRotate="True" Center="150,150"
                               Height="300" Width="300" Background="Transparent" 
                               ShowsActivationEffects="False"
                               Orientation="{Binding Path=WheelOrientation, Mode=TwoWay}" 
                               Clip="{StaticResource myEllipse}">
                <Image Source="{Binding Path=WheelImageSource}" />
            </s:ScatterViewItem>
        </s:ScatterView>
    </Grid>
</s:SurfaceUserControl>
